[metadata]
name = grove
description = A Software as a Service (SaaS) log collection framework.
versioning = build-id
classifiers =
    Programming Language :: Python :: 3.9
    Natural Language :: English

[options]
python_requires = >= 3.9
install_requires =
    aws-lambda-powertools>=2.0,<3.0
    boto3>=1.26,<2.0
    requests>=2.28,<3.0
    google-api-python-client>=2.68,<3.0
    simple-salesforce>=1.12,<2.0
    twilio>=7.15,<8.0
    pydantic>=1.10,<2.0

[options.extras_require]
tests =
    black
    coverage
    flake8
    flake8-black
    flake8-blind-except
    flake8-bugbear
    flake8-builtins
    flake8-comprehensions
    flake8-docstrings
    flake8-isort
    flake8_tuple
    types-bleach
    types-requests
    types-setuptools
    isort
    mypy
    pip-tools
    mock
    moto[ssm,s3]
    pytest
    pytest-cov
    responses
    tox
    sphinx
    furo

; flake8 for linting.
[flake8]
max-complexity = 10
import-order-style = edited
application-import-names = grove
max-line-length = 88
select = B,C,D,E,F,P,T4,W,B9
exclude =
    *.egg-info,
    *.pyc,
    .cache,
    .coverage.*,
    .gradle,
    .tox,
    build,
    dist,
    htmlcov.*
ignore =
    # Exception chaining is automatic inside of except blocks.
    B904,
    # Don't prefer !r / !s in string interpolation.
    B028, B907,
    # See https://github.com/PyCQA/pycodestyle/issues/373
    E203,
    # Ignore too many leading '#' for block comment
    E266,
    # Ignore Line too long (82 > 79) in favor of bugbear
    E501,
    # Ignore Line break before binary operator (not PEP8)
    W503,
    # Ignore 1 blank line required before/after class docstring and summary
    D203,D204,D205,
    # Ignore multi-line docstring summary should start at the first line
    D212
    # Ignore First line should end with a period
    D400
    # Ignore First line should be in imperative mood
    D401
    # Ignore missing module, class, public method, function,
    # public package, magic method, and __init__ docstrings.
    # ...probably want to enable these at some point...
    D100,D101,D102,D103,D104,D105,D107

; mypy for type checking.
[mypy]
files = ./grove/**/*.py,./tests/**/*.py
allow_redefinition = False
check_untyped_defs = True
disallow_any_generics = True
disallow_untyped_calls = False
ignore_errors = False
ignore_missing_imports = True
implicit_reexport = False
local_partial_types = True
strict_optional = True
strict_equality = True
no_implicit_optional = True
warn_no_return = True
warn_unused_ignores = True
warn_redundant_casts = True
warn_unused_configs = True
warn_unreachable = True

; isort for import sorting.
[tool:isort]
multi_line_output = 3
profile = black

; pytest for Testing.
[tool:pytest]
junit_family = xunit2
norecursedirs =.*
self-contained-html = true
testpaths = tests
addopts =
    --strict
    --tb=auto
    --cov=grove
    --cov-report=term-missing:skip-covered
    --cov-branch
    -p no:doctest
    -p no:warnings
    -s

; Tox for linter and test execution.
[tox:tox]
envlist = linters,py3

[testenv]
pip_version = pip
extras = tests
commands = pytest -c setup.cfg
srcs = setup.py grove

[testenv:linters]
basepython = python3
usedevelop = true
commands =
    {[testenv:flake8]commands}
    {[testenv:mypy]commands}

[testenv:flake8]
basepython = python3
skip_install = true
commands =
    flake8 --config setup.cfg {[testenv]srcs}

[testenv:mypy]
basepython3 = python3
skip_install = true
commands =
    - mypy --config-file setup.cfg {[testenv]srcs}
